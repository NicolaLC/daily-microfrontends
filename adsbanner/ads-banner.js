/** this class is autogenerated from AVE */
class ADSBanner extends HTMLElement {
    _defaultTitle = 'Ads works!';
    _defaultContent = 'But you need to set the correct attributes (<b>title</b>, <b>content</b> and <b>image</b>)';
    _defaultImage = 'https://image.flaticon.com/icons/svg/596/596092.svg';
    _style = `
        .ads-banner-container {
            cursor: pointer;
            display: grid;
            grid-template-columns: 3rem 1fr;
            grid-template-rows: 3rem;
            grid-column-gap: .25rem;
            padding: .25rem;
            transition: transform .25s ease-out;
        }

        .ads-banner-container:hover {
            transform: translateY(-1px);
        }

        .ads-banner-image {
            display: inline-flex;
            justify-content: center;
            background-color: rgba(0,0,0,.1);
            border-radius: 3px;
            padding: .25rem;
        }
        .ads-banner-image img {
            width: 75%;
            height: auto;
        }
        .ads-banner-content {
            display: grid;
            grid-template-rows: 1rem 2rem;
            grid-template-columns: 1fr;
        }
        .ads-banner-content h2 {
            font-size: .75rem;
        }
        .ads-banner-content p {
            font-size: .7rem;
            opacity: .5;
        }
    `;
    /** called when DOM element is rendered */
    connectedCallback() {
        this.render();
        this.attach();
    }
    /** called when DOM element is disposed */
    disconnectedCallback() {
        this.detach();
    }
    /** called when 'ads-banner-update' event is called */
    updateCallback(event) {
        /** use event.details to get data from event */
    }
    /** called when 'ads-banner' is created */
    attach() {
        window.addEventListener('ads-banner-update', this.updateCallback);
        this.dispatchEvent(new CustomEvent('ads-banner-initialized', {
            bubbles: true,
        }));
    }
    /** called when 'ads-banner' is destroyed */
    detach() {
        window.removeEventListener('ads-banner-update', this.updateCallback);
        this.dispatchEvent(new CustomEvent('ads-banner-disposed', {
            bubbles: true,
        }));
    }
    /** render method - put here HTML */
    render(data) {
        window.requestAnimationFrame(() => {
            this.innerHTML = `
                <style>${this._style}</style>
                <div class="ads-banner-container">
                    <div class="ads-banner-image">
                    <img src="${this.getAttribute('image') || this._defaultImage}"/>
                    </div>
                    <div class="ads-banner-content">
                        <h2>${this.getAttribute('title') || this._defaultTitle}</h2>
                        <p>${this.getAttribute('content') || this._defaultContent}</p>
                    </div>
                </div>
            `;
        });
    }
}
window.customElements.define('ads-banner', ADSBanner);